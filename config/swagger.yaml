swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "2.0"
  title: "COFFIT API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "coffit@swm.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "http://www.coffit.com"
basePath: "/"
tags:
  - name: "trainer"
    description: "Everything about trainder"
  - name: "student"
    description: "Everything about student"
  - name: "PT"
    description: "Operations about PT"
  - name: "home"
    description: "Page that student visit first. We showing Banner and Trainer list"
  - name: "notification"
    description: "Operation about notification."
  - name: "schedule"
    description: "Operation about PT schedule"
  - name: "login"
    description: "User login our services"
  - name: "PTComment"
    description: "Trainer write comment when the PT finished."
  - name: "trainerSchedule"
    description: "Trainer available schedule."

schemes:
  - "https"
  - "http"

components:
  schemas:
    PTwithScheduleAndComment:
      type: "object"
      properties:
        id: #PK
          type: "integer"
          format: "int64"
          description: "PK"
        state:
          type: "string"
          description: "PT state"
          enum:
            - "exercising"
            - "finished"
        total_number:
          type: "integer"
          format: "int32"
        rest_number:
          type: "integer"
          format: "int32"
        start_date:
          type: "integer"
          format: "date"
          description: "first start PT date"
        end_date:
          type: "integer"
          format: "date"
          description: "Termination time"
        student_id: #FK
          type: "integer"
          format: "int64"
          description: "FK"
        trainer_id: #FK
          type: "integer"
          format: "int64"
          description: "FK"
        ptComments:
          $ref: "#/definitions/PTComment"
        schedules:
          type: array
          items:
            $ref: "#/definitions/Schedule"
    BannerAndTrainerList:
      type: object
      properties:
        banner:
          type: array
          items:
            $ref: "#/definitions/Banner"
        trainer_list:
          type: array
          items:
            $ref: "#/definitions/Trainer"
    TrainerDetailWithPictures:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        price:
          type: "integer"
          format: "int64"
        career:
          type: "string"
        description:
          type: "string"
        summary:
          type: "string"
        picture_url:
          type: "string"
        phone_number:
          type: "string"
        fcm_token:
          type: "string"
        total_star:
          type: "integer"
        num_review:
          type: "integer"
        created_at:
          type: integer
          format: date
        updated_at:
          type: integer
          format: date
        trainer_pictures:
          type: array
          items:
            $ref: "#/definitions/TrainerPicture"
    StudentWithSchedules:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        uername:
          type: "string"
        email:
          type: "string"
        age:
          type: "integer"
          format: "int64"
        picture:
          type: "string"
        gender:
          type: "string"
        phone_number:
          type: string
          pattern: '^\d{3}-\d{4}-\d{4}$'
        fcm_token:
          type: "string"
        created_at:
          type: integer
          format: date
        updated_at:
          type: integer
          format: date
        schedules:
          type: array
          items:
            $ref: "#/definitions/Schedule"


paths:
  /login:
    post:
      tags:
        - "login"
      summary: "Check good user"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          # 추가해보자
        400:
          description: "fail!!"
  /login/oauth:
    post:
      tags:
        - "login"
      summary: "login diffrent services like kakoa, google"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          # 추가해보자
        400:
          description: "fail!!"

  /home:
    get:
      tags:
        - "home"
      parameters:
        - in: "query" # Search Trainer name
          name: "trainerName"
          type: "string"
      summary: "Get the first page"
      description: "Check Sorting, Paging / When clicking All trainer, No paging."
      operationId: "getHome"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          schema:
            $ref: "#/components/schemas/BannerAndTrainerList"

  /trainers:
    get:
      tags:
        - "trainer"
      summary: "Get a trainer list"
      description: "Get all trainer list sorting from student favorite"
      operationId: "getTrainerList"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          schema:
            type: array
            items:
              $ref: "#/definitions/Trainer"

  /trainers/{trainerId}:
    get:
      tags:
        - "trainer"
      summary: "Find trainer by ID"
      description: "Returns trainer description"
      operationId: "getPetById"
      produces:
        - "application/json"
      parameters:
        - name: "trainerId"
          in: "path"
          description: "ID of trainer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/components/schemas/TrainerDetailWithPictures"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Trainer not found"
    put:
      tags:
        - "trainer"
      summary: "Updates a trainer information"
      description: ""
      operationId: "updateTrainerWithForm"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "Id"
          in: "path"
          description: "ID of pet that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          schema:
            $ref: "#/components/schemas/TrainerDetailWithPictures"
      responses:
        204:
          description: "your request applied"
        405:
          description: "Invalid input"

  /trainers/{trainerId}/token:
    post:
      tags:
        - "trainer"
      summary: "upload Token"
      description: ""
      operationId: "setToken"
      produces:
        - "application/json"
      parameters:
        - name: "trainerId"
          in: "path"
          description: "ID of trainer"
          required: true
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          description: "token of trainer"
          required: true
          type: object
          properties:
            fcm_token:
              type: string
      responses:
        201:
          description: "token saved successfully!!"
        405:
          description: "Invalid input"

  /trainerSchedules:
    post:
      tags:
        - "trainerSchedule"
      summary: "Trainer add available schedule."
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          schema:
            type: array
            items:
              $ref: "#/definitions/TrainerSchedule"
      responses:
        201:
          description: "Success!!"
        405:
          description: "Invalid input"

  /students:
    post:
      tags:
        - "student"
      summary: "Make new student"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Student"
      responses:
        201:
          schema:
            $ref: "#/definitions/Student"
        404:
          description: "Not found"

  /students/trainers/{trainerId}: # 트레이너가 가지고 있는 학생 보여주기
    get:
      tags:
        - "student"
      summary: "Get all student including certain trainer"
      description: "Get student information using trainer id"
      parameters:
        - name: "trainerId"
          in: "path"
          required: true
          type: integer
          format: int64
          description: "id of trainer"
        - name: "studentName"
          in: "query"
          required: false
          type: string
          description: "If you want to search student name, you can find student information including schedule."
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/StudentWithSchedules"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Not found"
  /students/{studentId}: # student 자신 정보 보기 위한 경우
    get:
      tags:
        - "student"
      summary: "Get certain student information"
      description: "Get joining student user inforamion Using student id"
      operationId: "getStudent"
      produces:
        - "application/json"
      parameters:
        - name: "studentId"
          in: "path"
          description: "ID of student"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              student:
                $ref: "#/definitions/Student"
              PTAndSchedule:
                $ref: "#/components/schemas/PTwithScheduleAndComment"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Not found"
    put:
      tags:
        - "student"
      summary: "update this student by student id"
      description: ""
      operationId: "setStudent"
      produces:
        - "application/json"
      consumes:
        - "application/json"
        - "multipart/form-data"
      parameters:
        - name: "studentId"
          in: "path"
          description: "ID of student"
          required: true
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          description: "update student information"
          required: true
          schema:
            type: object
            $ref: "#/definitions/Student"
      responses:
        201:
          description: "successful operation"
        405:
          description: "Invalid input"
  /students/{studentId}/token:
    post:
      tags:
        - "student"
      summary: "upload Token"
      description: ""
      operationId: "setStudentToken"
      produces:
        - "application/json"
      parameters:
        - name: "Id"
          in: "path"
          description: "ID of student"
          required: true
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          description: "token of student"
          required: true
          type: object
          properties:
            fcm_token:
              type: string
      responses:
        201:
          description: "token saved successfully!!"
          schema:
            $ref: "#/definitions/Student"
        405:
          description: "Invalid input"

  /pts:
    post:
      tags:
        - "PT"
      summary : "Make a new connection trainer and student"
      parameters:
        - in: "body"
          name: "body"
          description: "check student ID and trainer ID"
          required: true
          schema:
            $ref: "#/definitions/PT"
      responses:
        200:
          description: "Success!!"
          schema:
            $ref: "#/definitions/PT"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Trainer not found"
  /pts/students/{studentId}:
    get:
      tags:
        - "PT"
      parameters:
        - name: "studentId"
          in: "path"
          description: "ID of student"
          required: true
          type: "integer"
          format: "int64"
      summary: "get PT list from student"
      description: "Get all PT, Nessary student id using session or JWT"
      operationId: "get PT list from student"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          schema:
            $ref: "#/components/schemas/PTwithScheduleAndComment"
  /pts/trainers/{trainerId}:
    get:
      tags:
        - "PT"
      parameters:
        - name: "trainerId"
          in: "path"
          description: "ID of trainer"
          required: true
          type: "integer"
          format: "int64"
      summary: "get PT list from trainer and trainer today schedule"
      description: "Get all PT, Nessary student id using session or JWT"
      operationId: "get PT list from trainer"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          schema:
            $ref: "#/components/schemas/PTwithScheduleAndComment"

  /ptComment:
    put:
      tags:
        - "PTComment"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/PTComment"
      summary: "Trainer update new comment."
      description: "The original comment disappears and trainer write a new comment."
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          schema:
            $ref: "#/definitions/PTComment"

  /notifications/students/{studentId}:
    get:
      tags:
        - "notification"
      parameters:
        - name: "studentId"
          in: "path"
          description: "ID of student"
          required: true
          type: "integer"
          format: "int64"
      summary: "get certain student notification"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          schema:
            type: array
            items:
              type: object
              properties:
                notification:
                  $ref: "#/definitions/Notification"
                schedule:
                  $ref: "#/definitions/Schedule"
  /notifications/trainers/{traienrId}:
    get:
      tags:
        - "notification"
      parameters:
        - name: "trainerId"
          in: "path"
          description: "ID of trainer"
          required: true
          type: "integer"
          format: "int64"
      summary: "get certain trainer notification"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Success!!"
          schema:
            type: array
            items:
              $ref: "#/definitions/Notification"

  /schedules:
    post:
      tags:
        - "schedule"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: '#/definitions/Schedule'
      summary: "Student make a new schedule"
      description: ""
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Schedule'
  /schedules/{scheduleId}:
    put: # 수락이든 거절이든 notification 만들기 # 이제 pt 시작하고 안하고를 업데이트
      tags:
        - "schedule"
      parameters:
        - name: scheduleId
          in: "path"
          type: number
          required: true
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: '#/definitions/Schedule'
      summary: "Accept student request schedule. Or reject request"
      description: ""
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Schedule'
    delete:
      tags:
        - "schedule"
      parameters:
        - name: scheduleId
          in: "path"
          type: number
          required: true
      summary: "Students or trainers request deleting schedule"
      responses:
        204:
          description: "success!!"
  /schedules/students/{studentId}:
    get:
      tags:
        - "schedule"
      parameters:
        - name: "studentId"
          in: "path"
          description: "ID of student"
          required: true
          type: "integer"
          format: "int64"
      summary: "get certain student schedules "
      responses:
        200:
          description: ""
          schema:
            $ref: '#/definitions/Schedule'
  /schedules/trainers/{trainerId}:
    get:
      tags:
        - "schedule"
      parameters:
        - name: "trainerId"
          in: "path"
          description: "ID of trainer"
          required: true
          type: "integer"
          format: "int64"
      summary: "get certain trainer schedules "
      responses:
        200:
          description: ""
          schema:
            type: object
            properties:
              trainer:
                $ref: '#/definitions/Trainer'
              schedules:
                type: array
                items:
                  $ref: '#/definitions/Schedule'
              availableTime:
                type: array
                items:
                  $ref: '#/definitions/TrainerSchedule'
  /schedule/memos/{scheduleId}:
    put:
      tags:
        - "schedule"
      parameters:
        - in: "path"
          name: "scheduleId"
          required: true
          description: "is updated target schedule id"
          type: integer
        - in: "body"
          name: "body"
          require: true
          description: "Include trainer memo about pt"
          schema:
            type: object
            properties:
              memo:
                type: string
      summary: "trainer request updating memo"
      responses:
        204:
          description: "success"


securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"


definitions:
  Trainer:
    type : "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      price:
        type: "integer"
        format: "int64"
      career:
        type: "string"
      description:
        type: "string"
      summary:
        type: "string"
      picture_url:
        type: "string"
      phone_number:
        type: "string"
      fcm_token:
        type: "string"
      total_star:
        type: "integer"
      num_review:
        type: "integer"
      created_at:
        type: integer
        format: date
      updated_at:
        type: integer
        format: date

  TrainerPicture:
    type : "object"
    properties:
      id: #PK
        type: "integer"
        format: "int64"
      picture_url:
        type: "string"
      trainer_id: #FK
        type: "integer"
        format: "int64"
      created_at:
        type: integer
        format: date
      updated_at:
        type: integer
        format: date

  TrainerSchedule:
    type: object
    properties:
      id: #PK
        type: "integer"
        format: "int64"
      start_time:
        type: integer
        format: date
      availability :
        type: boolean
        default: true
      created_at:
        type: integer
        format: date
      updated_at:
        type: integer
        format: date
      trainer_id: #FK
        type: "integer"
        format: "int64"
      schedule_id:
        type: integer
        format: int64

  Student:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      uername:
        type: "string"
      email:
        type: "string"
      age:
        type: "integer"
        format: "int64"
      picture:
        type: "string"
      gender:
        type: string
        enum:
          - '남성'
          - '여성'
          - '대답을 원하지 않음'
      phone_number:
        type: string
        pattern: '^\d{3}-\d{4}-\d{4}$'
      fcm_token:
        type: "string"
      created_at:
        type: integer
        format: date
      updated_at:
        type: integer
        format: date

  PT:
    type: "object"
    properties:
      id: #PK
        type: "integer"
        format: "int64"
        description: "PK"
      state:
        type: "string"
        description: "PT state"
        enum:
          - "exercising"
          - "finished"
      total_number:
        type: "integer"
        format: "int32"
      rest_number:
        type: "integer"
        format: "int32"
      start_date:
        type: "integer"
        format: "date"
        description: "first start PT date"
      end_date:
        type: "integer"
        format: "date"
        description: "Termination time"
      student_id: #FK
        type: "integer"
        format: "int64"
        description: "FK"
      trainer_id: #FK
        type: "integer"
        format: "int64"
        description: "FK"
      created_at:
        type: integer
        format: date
      updated_at:
        type: integer
        format: date

  Schedule:
    type : "object"
    properties:
      id: #PK
        type: "integer"
        format: "int64"
      is_trainer:
        type: boolean
      state:
        type: "integer"
        format: "int64"
      date:
        type: "string"
        format: "date"
      start_time:
        type: "integer"
        format: time
      end_time:
        type: "integer"
        format: time
      memo:
        type: "string"
      created_at:
        type: "integer"
        format: "date"
      updated_at:
        type: "integer"
        format: "date"
      student_id:
        type: "integer"
        format: "int64"
      trainer_id:
        type: "integer"
        format: "int64"
      pt_id: #FK
        type: "integer"
        format: "int64"
      trainer_schedule_id:
        type: integer
        format: int64

  Banner:
    type: object
    properties:
      id: #PK
        type: integer
        format: int64
      picture_url:
        type: string
        format: url
      thumbnail_url:
        type: string
        format: url
      created_at:
        type: integer
        format: date
      updated_at:
        type: integer
        format: date

  Notification:
    type: object
    properties:
      id: #PK
        type: integer
        format: int64
      to_whom:
        type: integer
        format: int32
        enum:
          - 0 #Sending student
          - 1 #Sending trainer
      contents:
        type: string
      type:
        type: integer
      schedule_id:
        type: integer
        format: int64
      student_id:
        type: integer
        format: int64
      trainer_id:
        type: integer
        format: int64
      origin_date:
        type: integer
        format: date
      request_date:
        type: integer
        format: date
      created_at:
        type: integer
        format: date
      updated_at:
        type: integer
        format: date

  PTComment:
    type: object
    properties:
      id:
        type: integer
        format: int64
      comment:
        type: string
      pt_id:
        type: integer
        format: int64
      created_at:
        type: integer
        format: date
      updated_at:
        type: integer
        format: date



externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"